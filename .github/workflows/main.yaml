name: security-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Required for OIDC (and safe generally)
permissions:
  id-token: write
  contents: read

jobs:
  validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Format Check
        working-directory: infra/azure/env/dev
        run: terraform fmt -check

  checkov-terraform:
    name: Checkov Scan - Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkov - Terraform
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/azure/env/dev
          framework: terraform
          soft_fail: true
          output_format: cli

  checkov-kubernetes:
    name: Checkov Scan - Kubernetes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkov - Kubernetes
        uses: bridgecrewio/checkov-action@master
        with:
          directory: clusters
          framework: kubernetes
          soft_fail: true
          output_format: cli

  semgrep:
    name: Semgrep SAST
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Semgrep
        run: pip install --upgrade semgrep

      - name: Run Semgrep (OSS rules)
        continue-on-error: true
        run: |
          semgrep scan \
            --config p/ci \
            --config p/python \
            --config p/terraform \
            --config p/kubernetes \
            --config p/docker \
            --config p/github-actions \
            --sarif > semgrep.sarif

      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: semgrep.sarif

  azure-oidc-auth-test:
    name: Azure OIDC auth (smoke test)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      - name: Azure login via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use the official CLI action to ensure 'az' is available
      - name: Show current account (whoami)
        uses: azure/cli@v2
        with:
          inlineScript: |
            az account show --output table
            az account get-access-token --resource https://management.azure.com/ --query expiresOn -o tsv